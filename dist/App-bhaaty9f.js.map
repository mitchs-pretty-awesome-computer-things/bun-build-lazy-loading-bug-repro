{
  "version": 3,
  "sources": ["../src/App.tsx", "../src/APITester.tsx"],
  "sourcesContent": [
    "import React from \"react\";\nimport { APITester } from \"./APITester\";\nimport \"./index.css\";\n\nimport logo from \"./logo.svg\";\nimport reactLogo from \"./react.svg\";\n\nconst Page = React.lazy(() => import(\"./Page\"));\n\nexport function App() {\n  return (\n    <div className=\"app\">\n      <div className=\"logo-container\">\n        <img src={logo} alt=\"Bun Logo\" className=\"logo bun-logo\" />\n        <img src={reactLogo} alt=\"React Logo\" className=\"logo react-logo\" />\n      </div>\n\n      <h1>Bun + React</h1>\n      <p>\n        Edit <code>src/App.tsx</code> and save to test HMR\n      </p>\n      <APITester />\n      <React.Suspense fallback={<>Loading...</>}>\n        <Page />\n      </React.Suspense>\n    </div>\n  );\n}\n\nexport default App;\n",
    "import { useRef, type FormEvent } from \"react\";\n\nexport function APITester() {\n  const responseInputRef = useRef<HTMLTextAreaElement>(null);\n\n  const testEndpoint = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    try {\n      const form = e.currentTarget;\n      const formData = new FormData(form);\n      const endpoint = formData.get(\"endpoint\") as string;\n      const url = new URL(endpoint, location.href);\n      const method = formData.get(\"method\") as string;\n      const res = await fetch(url, { method });\n\n      const data = await res.json();\n      responseInputRef.current!.value = JSON.stringify(data, null, 2);\n    } catch (error) {\n      responseInputRef.current!.value = String(error);\n    }\n  };\n\n  return (\n    <div className=\"api-tester\">\n      <form onSubmit={testEndpoint} className=\"endpoint-row\">\n        <select name=\"method\" className=\"method\">\n          <option value=\"GET\">GET</option>\n          <option value=\"PUT\">PUT</option>\n        </select>\n        <input type=\"text\" name=\"endpoint\" defaultValue=\"/api/hello\" className=\"url-input\" placeholder=\"/api/hello\" />\n        <button type=\"submit\" className=\"send-button\">\n          Send\n        </button>\n      </form>\n      <textarea ref={responseInputRef} readOnly placeholder=\"Response will appear here...\" className=\"response-area\" />\n    </div>\n  );\n}\n"
  ],
  "mappings": "2DAAA,eCAA,0BAEO,SAAS,CAAS,EAAG,CAC1B,IAAM,EAAmB,SAA4B,IAAI,EAoBzD,OACE,SAYE,MAZF,CAAK,UAAU,aAAf,SAYE,CAXA,SASE,OATF,CAAM,SApBW,MAAO,IAAkC,CAC5D,EAAE,eAAe,EAEjB,GAAI,CACF,IAAM,EAAO,EAAE,cACT,EAAW,IAAI,SAAS,CAAI,EAC5B,EAAW,EAAS,IAAI,UAAU,EAClC,EAAM,IAAI,IAAI,EAAU,SAAS,IAAI,EACrC,EAAS,EAAS,IAAI,QAAQ,EAG9B,EAAO,MAFD,MAAM,MAAM,EAAK,CAAE,QAAO,CAAC,GAEhB,KAAK,EAC5B,EAAiB,QAAS,MAAQ,KAAK,UAAU,EAAM,KAAM,CAAC,EAC9D,MAAO,EAAO,CACd,EAAiB,QAAS,MAAQ,OAAO,CAAK,IAMhB,UAAU,eAAxC,SASE,CARA,SAGE,SAHF,CAAQ,KAAK,SAAS,UAAU,SAAhC,SAGE,CAFA,SAAyB,SAAzB,CAAQ,MAAM,MAAd,qCAAyB,EACzB,SAAyB,SAAzB,CAAQ,MAAM,MAAd,qCAAyB,IAF3B,qBAGE,EACF,SAAC,QAAD,CAAO,KAAK,OAAO,KAAK,WAAW,aAAa,aAAa,UAAU,YAAY,YAAY,cAA/F,qBAA4G,EAC5G,SAEE,SAFF,CAAQ,KAAK,SAAS,UAAU,cAAhC,sCAEE,IARJ,qBASE,EACF,SAAC,WAAD,CAAU,IAAK,EAAkB,SAAQ,GAAC,YAAY,+BAA+B,UAAU,iBAA/F,qBAA+G,IAXjH,qBAYE,sED7BA,ZAAO,UAAM,KAAK,IAAa,6BAAS,EAEvC,SAAS,CAAG,EAAG,CACpB,OACE,SAcE,MAdF,CAAK,UAAU,MAAf,SAcE,CAbA,SAGE,MAHF,CAAK,UAAU,iBAAf,SAGE,CAFA,SAAC,MAAD,CAAK,IAAK,EAAM,IAAI,WAAW,UAAU,iBAAzC,qBAAyD,EACzD,SAAC,MAAD,CAAK,IAAK,EAAW,IAAI,aAAa,UAAU,mBAAhD,qBAAkE,IAFpE,qBAGE,EAEF,SAAiB,KAAjB,8CAAiB,EACjB,SAEE,IAFF,UAEE,CAFF,QACO,SAAmB,OAAnB,8CAAmB,EAD1B,+CAEE,EACF,SAAC,EAAD,wBAAW,EACX,SAEE,UAAM,SAFR,CAAgB,SAAU,iEAAc,EAAxC,SACE,SAAC,EAAD,wBAAM,GADR,qBAEE,IAbJ,qBAcE,EAIN,IAAe",
  "debugId": "C4F4E6D29EF7F6F164756E2164756E21",
  "names": []
}